#!/bin/bash

#
# Before running this script please extract raw vendor image
# and mount loop image to some mount point. Give that mount point
# parameter for this script.
#
# 1. "simg2img vendor.img vendor.raw" (Run inside Mer SDK target)
# 2. "mkdir ~/vendor"
# 3. "sudo mount -t ext4 -o loop vendor.raw ~/vendor"
# 4. "droid-system-device/helpers/copy_vendor.sh ~/vendor rpm/spec-to-modify.spec"
#

if [ $# -lt 2 ]; then
  echo "Usage: droid-system-device/helpers/$(basename "$0") ~/path/to/vendor rpm/spec-to-modify.spec"
  exit
fi

VENDOR_SPARSE=sparse/vendor
VENDOR_MOUNT=$1

modify_spec=$(readlink -f "$2")
post_rules=$(mktemp)

# Add read permission for some binaries under vendor mount
if [ -f helpers/fixup-permissions.sh ]; then
    source helpers/fixup-permissions.sh
else
    source droid-system-device/helpers/fixup-permissions.sh
fi

# Remove current sparse and create it again
rm -rf "$VENDOR_SPARSE"
mkdir -p "$VENDOR_SPARSE"

# Copy content
echo "Copy $VENDOR_MOUNT/* to $VENDOR_SPARSE"
rsync -a --exclude="lost+found" "$VENDOR_MOUNT"/* "$VENDOR_SPARSE"

pushd "$VENDOR_MOUNT" 1>/dev/null
find . \( -uid +0 -or -gid +0 \) -and \( -type f -or -type d -or -type s \) -printf "[ -e /vendor/%P ] && chown %U:%G /vendor/%P\n" 2>/dev/null | LC_ALL="C" sort > "$post_rules"
popd 1>/dev/null

token="# rest of this file is autogenerated. do not edit"
sed -i "/$token/,\$d" "$modify_spec"
echo "$token" >> "$modify_spec"
echo "%post" >> "$modify_spec"

if [ "$(wc -l < "$post_rules")" -gt 0 ]; then
  echo "Updating $modify_spec"
  cat "$post_rules" >> "$modify_spec"
fi
rm -f "$post_rules"

pushd "$VENDOR_MOUNT" 1>/dev/null
find . -exec getcap {} + 2>/dev/null | awk '{ print "[ -e /vendor/"$1" ] && " "setcap", $3, "/vendor/"$1 }' | LC_COLLATE="C" sort >> "$modify_spec"
popd 1>/dev/null

# Remove generic unused directories and files
if [ -f helpers/remove-unused.sh ]; then
    source helpers/remove-unused.sh
else
    source droid-system-device/helpers/remove-unused.sh
fi

# General patches
echo "Apply general patches:"
source droid-system-device/helpers/general-patches.sh

# Move build.prop to proper place if spec file has multiple_rpms definition
if grep -q "%define multiple_rpms 1" "$modify_spec"; then
    if [ -f "$VENDOR_SPARSE"/build.prop ]; then
        DEVICE=$(grep ro.vendor.product.name "$VENDOR_SPARSE"/build.prop | cut -d '_' -f2)
        if [ -z "$DEVICE" ]; then
            DEVICE=$(grep ro.product.vendor.name "$VENDOR_SPARSE"/build.prop | cut -d '_' -f2)
        fi
        mkdir -p "$DEVICE"/vendor
        mv "$VENDOR_SPARSE"/build.prop "$DEVICE"/vendor
    fi

    # Move Vendor Interface Object manifest to proper place
    if [ -f "$VENDOR_SPARSE"/etc/vintf/manifest.xml ]; then
        mkdir -p "$DEVICE"/vendor/etc/vintf
        mv "$VENDOR_SPARSE"/etc/vintf/manifest.xml "$DEVICE"/vendor/etc/vintf/manifest.xml
    fi
fi

# Apply patches if exist
if [ -d patches ]; then
    echo "Apply patches:"
    find patches/* | xargs patch -p1 -i
fi
